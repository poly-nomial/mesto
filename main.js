(()=>{"use strict";var t={};function e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}t.p="";var n=function(){function t(e,n,r,o,i,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._cardId=e._id,this._ownerId=e.owner._id,this._usersLiked=e.likes,this._numberOfLikes=e.likes.length,this._templateSelector=n,this._openImagePopup=r,this._openConfirmationPopup=o,this._likeCard=i,this._dislikeCard=a}var n,r;return n=t,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.cloneNode(!0)}},{key:"_toggleActiveLike",value:function(t){t.target.classList.contains("place__like_active")?this._dislikeCard(this._cardId).then((function(e){t.target.classList.remove("place__like_active"),t.target.nextElementSibling.textContent=e.likes.length})).catch((function(t){return console.log(t)})):this._likeCard(this._cardId).then((function(e){t.target.classList.add("place__like_active"),t.target.nextElementSibling.textContent=e.likes.length})).catch((function(t){return console.log(t)}))}},{key:"_deleteCard",value:function(t){document.getElementById(t).innerHTML="",document.getElementById(t).remove()}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton.addEventListener("click",(function(e){return t._toggleActiveLike(e)})),this._deleteButton.addEventListener("click",(function(){t._openConfirmationPopup((function(){return t._deleteCard(t._cardId)}))})),this._placepic.addEventListener("click",(function(){return t._openImagePopup(t._name,t._link)}))}},{key:"createCard",value:function(t){var e=this;return this._element=this._getTemplate(),this._place=this._element.querySelector(".place"),this._deleteButton=this._place.querySelector(".place__delete-button"),t!=this._ownerId&&this._deleteButton.remove(),this._placepic=this._element.querySelector(".place__pic"),this._likesCounter=this._element.querySelector(".place__number-of-likes"),this._placepic.setAttribute("src",this._link),this._placepic.setAttribute("alt",this._name),this._element.querySelector(".place__name").textContent=this._name,this._likeButton=this._place.querySelector(".place__like"),this._likesCounter.textContent=this._numberOfLikes,this._usersLiked.forEach((function(n){n._id===t&&e._likeButton.classList.add("place__like_active")})),this._place.setAttribute("id",this._cardId),this._setEventListeners(),this._element}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._invalidInputClass=e.invalidInputClass,this._buttonSelector=e.buttonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._activeErrorClass=e.activeErrorClass,this._formElement=n,this._buttonElement=n.querySelector(this._buttonSelector)}var e,n;return e=t,(n=[{key:"_getInputList",value:function(){return Array.from(this._formElement.querySelectorAll(this._inputSelector))}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._getInputList())?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled",!0))}},{key:"_showErrorMessage",value:function(t,e){var n=this._formElement.querySelector(".popup__".concat(t.id,"-error"));n.textContent=e,n.classList.add(this._activeErrorClass),t.classList.add(this._invalidInputClass)}},{key:"hideErrorMessage",value:function(t){var e=this._formElement.querySelector(".popup__".concat(t.id,"-error"));e.textContent="",e.classList.remove(this._activeErrorClass),t.classList.remove(this._invalidInputClass)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this.hideErrorMessage(t):this._showErrorMessage(t,t.validationMessage)}},{key:"_setEventListeners",value:function(){var t=this;this._inputList=this._getInputList(),this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&r(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this.button=this._popup.querySelector(".popup__save-btn")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-btn"))&&t.close()}))}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=l(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},s.apply(this,arguments)}function l(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=h(t)););return t}function p(t,e){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},p(t,e)}function f(t,e){if(e&&("object"===u(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function h(t){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},h(t)}var y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&p(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=h(r);if(o){var n=h(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return f(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._photoElement=e._popup.querySelector(".popup__photo"),e._titleElement=e._popup.querySelector(".popup__photo-title"),e}return e=a,(n=[{key:"open",value:function(t,e){this._photoElement.setAttribute("src",e),this._photoElement.setAttribute("alt",t),this._titleElement.textContent=t,s(h(a.prototype),"open",this).call(this)}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(a);function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=m(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},v.apply(this,arguments)}function m(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=k(t)););return t}function b(t,e){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},b(t,e)}function g(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function k(t){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},k(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&b(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=k(r);if(o){var n=k(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return g(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitFunction=e,n._popupForm=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n}return e=a,(n=[{key:"getInputValues",value:function(){for(var t=[],e=0;e<this._inputList.length;e++)t[e]=this._inputList[e].value;return t}},{key:"setEventListeners",value:function(){var t=this;v(k(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){return t._submitFunction(e)}))}},{key:"close",value:function(){v(k(a.prototype),"close",this).call(this),this._popupForm.reset()}}])&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(a);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=C(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},O.apply(this,arguments)}function C(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function L(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return P(t)}function P(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}var A=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(r);if(o){var n=I(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return L(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t)).confirmedAction=e,n._executeConfirmedAction=n.executeConfirmedAction.bind(P(n)),n}return e=a,(n=[{key:"setNewConfirmedAction",value:function(t){this.confirmedAction=t}},{key:"executeConfirmedAction",value:function(){this.confirmedAction(),this.close()}},{key:"setEventListeners",value:function(){O(I(a.prototype),"setEventListeners",this).call(this),this.button.addEventListener("click",this._executeConfirmedAction)}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(a);function q(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var T=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameElement=document.querySelector(e),this._userDescriptionElement=document.querySelector(n),this._userAvatarElement=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._userNameElement.textContent,about:this._userDescriptionElement.textContent}}},{key:"setUserInfo",value:function(t){var e,n,r=(n=3,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return q(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?q(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a=r[2];this._userNameElement.textContent=o,this._userDescriptionElement.textContent=i,this._userAvatarElement.style["background-image"]="url(".concat(a,")")}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function x(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var B=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(){var t=this;this.items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&x(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function D(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var M=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._token=e.headers.authorization,this._cohort="cohort-50"}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/").concat(this._cohort,"/users/me"),{headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._getResponseData(e)}))}},{key:"getCardsFromServer",value:function(){var t=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards"),{headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._getResponseData(e)}))}},{key:"editUserInfo",value:function(t){var e,n,r=this,o=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return D(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:i,about:a})}).then((function(t){return r._getResponseData(t)}))}},{key:"postNewCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,link:t.link})}).then((function(t){return e._getResponseData(t)}))}},{key:"likeCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards/").concat(t,"/likes"),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._getResponseData(t)}))}},{key:"dislikeCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._getResponseData(t)}))}},{key:"updateAvatar",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(t){return e._getResponseData(t)}))}},{key:"_getResponseData",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.p,t.p,t.p,t.p,t.p,t.p;var N={formSelector:".popup__form",inputSelector:".popup__input",invalidInputClass:"popup__input_invalid",buttonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_inactive",activeErrorClass:"popup__input-error_active"},V=document.querySelector(".popup__input_type_user-name"),z=document.querySelector(".popup__input_type_user-desc"),F=document.querySelector(".popup__input_type_place-name"),H=document.querySelector(".popup__input_type_place-link"),J=document.querySelector(".popup__input_type_avatar-link"),$=document.querySelector(".profile__edit-button"),G=document.querySelector(".profile__add-button"),K=document.querySelector(".avatar__edit-pic");function Q(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var W,X,Y=new M({baseUrl:"https://nomoreparties.co/v1/",headers:{authorization:"85ece6ec-ad42-4595-ab64-f4ab4791389f","Content-Type":"application/json"}}),Z=new o(N,document.querySelector(".popup_type_add-place").querySelector(N.formSelector)),tt=new o(N,document.querySelector(".popup_type_edit-profile").querySelector(N.formSelector)),et=new o(N,document.querySelector(".popup_type_change-avatar").querySelector(N.formSelector)),nt=new T(".profile__user-name",".profile__user-description",".avatar"),rt=new y(".popup_type_photo-view"),ot=new w(".popup_type_edit-profile",(function(t){t.preventDefault(),ft(!0,ot.button);var e=ot.getInputValues();Y.editUserInfo(e).then((function(t){nt.setUserInfo([t.name,t.about,t.avatar]),ft(!1,ot.button),ot.close()})).catch((function(t){return console.log(t)}))})),it=new w(".popup_type_add-place",(function(t){t.preventDefault(),ft(!0,it.button);var e=it.getInputValues(),n={name:e[0],link:e[1]};Y.postNewCard(n).then((function(t){W.items=[t],W.renderItems(),ft(!1,it.button),it.close()})).catch((function(t){return console.log(t)}))})),at=new w(".popup_type_change-avatar",(function(t){t.preventDefault(),ft(!0,at.button);var e,n,r=(e=at.getInputValues(),n=1,function(t){if(Array.isArray(t))return t}(e)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return Q(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];Y.updateAvatar(r).then((function(t){nt.setUserInfo([t.name,t.about,t.avatar]),ft(!1,at.button),at.close()})).catch((function(t){return console.log(t)}))})),ut=new A(".popup_type_confirmation",(function(){}));Y.getUserInfo().then((function(t){nt.setUserInfo([t.name,t.about,t.avatar]),X=t._id})).then((function(){Y.getCardsFromServer().then((function(t){(W=new B({items:t,renderer:function(t){W.addItem(new n(t,"#place-template",ct,st,lt,pt).createCard(X))}},".places")).renderItems()})).catch((function(t){return console.log(t)}))})).catch((function(t){return console.log(t)})),rt.setEventListeners(),ot.setEventListeners(),it.setEventListeners(),ut.setEventListeners(),at.setEventListeners(),$.addEventListener("click",(function(){var t=nt.getUserInfo();V.value=t.name,z.value=t.about,tt.hideErrorMessage(V),tt.hideErrorMessage(z),tt.toggleButtonState(),ot.open()})),G.addEventListener("click",(function(){Z.hideErrorMessage(F),Z.hideErrorMessage(H),Z.toggleButtonState(),it.open()})),K.addEventListener("click",(function(){et.hideErrorMessage(J),et.toggleButtonState(),at.open()})),Z.enableValidation(),tt.enableValidation(),et.enableValidation();var ct=function(t,e){rt.open(t,e)},st=function(t){ut.confirmedAction=t,ut.open()},lt=function(t){return Y.likeCard(t)},pt=function(t){return Y.dislikeCard(t)};function ft(t,e){e.textContent=t?"Сохранение…":"Сохранить"}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,