(()=>{"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n,r,o,i,a,u){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this.cardId=t._id,this._ownerId=t.owner._id,this._userId=u,this._usersLiked=t.likes,this._numberOfLikes=t.likes.length,this._templateSelector=n,this._openImagePopup=r,this._openConfirmationPopup=o,this._deleteCard=i,this._updateLike=a}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.cloneNode(!0)}},{key:"_toggleActiveLike",value:function(t){this._updateLike(t,this)}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton.addEventListener("click",(function(e){return t._toggleActiveLike(e)})),this._deleteButton.addEventListener("click",(function(){t._openConfirmationPopup((function(){return t._deleteCard(t)}))})),this._placePic.addEventListener("click",(function(){return t._openImagePopup(t._name,t._link)}))}},{key:"createCard",value:function(){var t=this;return this._element=this._getTemplate(),this._place=this._element.querySelector(".place"),this._deleteButton=this._place.querySelector(".place__delete-button"),this._userId!=this._ownerId&&this._deleteButton.remove(),this._placePic=this._element.querySelector(".place__pic"),this._likesCounter=this._element.querySelector(".place__number-of-likes"),this._placePic.setAttribute("src",this._link),this._placePic.setAttribute("alt",this._name),this._element.querySelector(".place__name").textContent=this._name,this._likeButton=this._place.querySelector(".place__like"),this._likesCounter.textContent=this._numberOfLikes,this._usersLiked.some((function(e){return e._id===t._userId}))&&this._likeButton.classList.add("place__like_active"),this._place.setAttribute("id",this.cardId),this._setEventListeners(),this._element}},{key:"deleteCardFromDOM",value:function(){document.getElementById(this.cardId).remove()}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-btn"))&&t.close()}))}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=u(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},a.apply(this,arguments)}function u(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=l(t)););return t}function c(t,e){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},c(t,e)}function s(t,e){if(e&&("object"===o(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}var p=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&c(t,e)}(p,t);var e,n,r,o,u=(r=p,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=l(r);if(o){var n=l(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return s(this,t)});function p(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,p),(n=u.call(this,t))._submitFunction=e,n._popupForm=n._popup.querySelector(".popup__form"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n.button=n._popup.querySelector(".popup__save-btn"),n}return e=p,(n=[{key:"getInputValues",value:function(){for(var t=[],e=0;e<this._inputList.length;e++)t[e]=this._inputList[e].value;return t}},{key:"setEventListeners",value:function(){var t=this;a(l(p.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(e){return t._submitFunction(e)}))}},{key:"close",value:function(){a(l(p.prototype),"close",this).call(this),this._popupForm.reset()}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),p}(r);function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var h=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=r,this.renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(){var t=this;this.items.forEach((function(e){t.renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&f(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var d=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSelector=e.inputSelector,this._invalidInputClass=e.invalidInputClass,this._buttonSelector=e.buttonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._activeErrorClass=e.activeErrorClass,this._formElement=n,this._buttonElement=n.querySelector(this._buttonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}var e,n;return e=t,(n=[{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled",!0))}},{key:"_showErrorMessage",value:function(t,e){var n=this._formElement.querySelector(".popup__".concat(t.id,"-error"));n.textContent=e,n.classList.add(this._activeErrorClass),t.classList.add(this._invalidInputClass)}},{key:"hideErrorMessage",value:function(t){var e=this._formElement.querySelector(".popup__".concat(t.id,"-error"));e.textContent="",e.classList.remove(this._activeErrorClass),t.classList.remove(this._invalidInputClass)}},{key:"resetValidationErrors",value:function(){var t=this;this._inputList.forEach((function(e){t.hideErrorMessage(e)}))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this.hideErrorMessage(t):this._showErrorMessage(t,t.validationMessage)}},{key:"_setEventListeners",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}}])&&y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=b(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},m.apply(this,arguments)}function b(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=E(t)););return t}function g(t,e){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},g(t,e)}function k(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function E(t){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},E(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&g(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=E(r);if(o){var n=E(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return k(this,t)});function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,t))._photoElement=e._popup.querySelector(".popup__photo"),e._titleElement=e._popup.querySelector(".popup__photo-title"),e}return e=a,(n=[{key:"open",value:function(t,e){this._photoElement.setAttribute("src",e),this._photoElement.setAttribute("alt",t),this._titleElement.textContent=t,m(E(a.prototype),"open",this).call(this)}}])&&v(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(r);function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=j(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},O.apply(this,arguments)}function j(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}function L(t,e){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},L(t,e)}function P(t,e){if(e&&("object"===S(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return I(t)}function I(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}var q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&L(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=A(r);if(o){var n=A(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return P(this,t)});function a(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t)).handleConfirm=e,n._executeConfirmedAction=n.executeConfirmedAction.bind(I(n)),n.button=n._popup.querySelector(".popup__save-btn"),n}return e=a,(n=[{key:"setNewConfirmedAction",value:function(t){this.handleConfirm=t}},{key:"executeConfirmedAction",value:function(){this.handleConfirm(),this.close()}},{key:"setEventListeners",value:function(){O(A(a.prototype),"setEventListeners",this).call(this),this.button.addEventListener("click",this._executeConfirmedAction)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(r);function R(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var x=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameElement=document.querySelector(e),this._userDescriptionElement=document.querySelector(n),this._userAvatarElement=document.querySelector(r)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._userNameElement.textContent,about:this._userDescriptionElement.textContent,avatar:this._userAvatarElement.style["background-image"]}}},{key:"setUserInfo",value:function(t){var e,n,r=(n=4,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return R(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?R(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a=r[2],u=r[3];this._userNameElement.textContent=o,this._userDescriptionElement.textContent=i,this._userAvatarElement.style["background-image"]="url(".concat(a,")"),this.userId=u}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function D(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function B(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var U=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._token=e.headers.authorization,this._cohort="cohort-50"}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/").concat(this._cohort,"/users/me"),{headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._getResponseData(e)}))}},{key:"getCardsFromServer",value:function(){var t=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards"),{headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return t._getResponseData(e)}))}},{key:"editUserInfo",value:function(t){var e,n,r=this,o=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return D(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:i,about:a})}).then((function(t){return r._getResponseData(t)}))}},{key:"postNewCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t.name,link:t.link})}).then((function(t){return e._getResponseData(t)}))}},{key:"deleteCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._getResponseData(t)}))}},{key:"likeCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards/").concat(t,"/likes"),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._getResponseData(t)}))}},{key:"dislikeCard",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return e._getResponseData(t)}))}},{key:"updateAvatar",value:function(t){var e=this;return fetch("https://mesto.nomoreparties.co/v1/".concat(this._cohort,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(t){return e._getResponseData(t)}))}},{key:"_getResponseData",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}}])&&B(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),V={formSelector:".popup__form",inputSelector:".popup__input",invalidInputClass:"popup__input_invalid",buttonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_inactive",activeErrorClass:"popup__input-error_active"},M=document.querySelector(".popup__input_type_user-name"),N=document.querySelector(".popup__input_type_user-desc"),z=(document.querySelector(".popup__input_type_place-name"),document.querySelector(".popup__input_type_place-link"),document.querySelector(".popup__input_type_avatar-link"),document.querySelector(".profile__edit-button")),F=document.querySelector(".profile__add-button"),J=document.querySelector(".avatar__edit-pic"),$=new U({baseUrl:"https://nomoreparties.co/v1/",headers:{authorization:"85ece6ec-ad42-4595-ab64-f4ab4791389f","Content-Type":"application/json"}}),H=new d(V,document.querySelector(".popup_type_add-place").querySelector(V.formSelector)),G=new d(V,document.querySelector(".popup_type_edit-profile").querySelector(V.formSelector)),K=new d(V,document.querySelector(".popup_type_change-avatar").querySelector(V.formSelector)),Q=new x(".profile__user-name",".profile__user-description",".avatar"),W=new w(".popup_type_photo-view"),X=new q(".popup_type_confirmation",(function(){}));function Y(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var Z=new h({items:[],renderer:function(){}},".places"),tt=new p(".popup_type_edit-profile",(function(t){t.preventDefault(),ut(!0,tt.button);var e=tt.getInputValues();$.editUserInfo(e).then((function(t){Q.setUserInfo([t.name,t.about,t.avatar,t._id]),tt.close()})).catch((function(t){return console.log(t)})).finally((function(){return ut(!1,tt.button)}))})),et=new p(".popup_type_add-place",(function(t){t.preventDefault(),ut(!0,et.button);var e=et.getInputValues(),n={name:e[0],link:e[1]};$.postNewCard(n).then((function(t){Z.items=[t],Z.renderer=Z.renderItems(),et.close()})).catch((function(t){return console.log(t)})).finally((function(){return ut(!1,et.button)}))})),nt=new p(".popup_type_change-avatar",(function(t){t.preventDefault(),ut(!0,nt.button);var e,n,r=(e=nt.getInputValues(),n=1,function(t){if(Array.isArray(t))return t}(e)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return Y(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Y(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];$.updateAvatar(r).then((function(t){Q.setUserInfo([t.name,t.about,t.avatar,t._id]),nt.close()})).catch((function(t){return console.log(t)})).finally((function(){return ut(!1,nt.button)}))}));$.getUserInfo().then((function(t){Q.setUserInfo([t.name,t.about,t.avatar,t._id])})).then((function(){$.getCardsFromServer().then((function(t){t.reverse(),Z.items=t,Z.renderer=function(t){Z.addItem(new e(t,"#place-template",rt,ot,it,at,Q.userId).createCard())},Z.renderItems()})).catch((function(t){return console.log(t)}))})).catch((function(t){return console.log(t)})),W.setEventListeners(),tt.setEventListeners(),et.setEventListeners(),X.setEventListeners(),nt.setEventListeners(),z.addEventListener("click",(function(){var t=Q.getUserInfo();M.value=t.name,N.value=t.about,G.resetValidationErrors(),G.toggleButtonState(),tt.open()})),F.addEventListener("click",(function(){H.resetValidationErrors(),H.toggleButtonState(),et.open()})),J.addEventListener("click",(function(){K.resetValidationErrors(),K.toggleButtonState(),nt.open()})),H.enableValidation(),G.enableValidation(),K.enableValidation();var rt=function(t,e){W.open(t,e)},ot=function(t){X.setNewConfirmedAction(t),X.open()};function it(t){$.deleteCard(t.cardId).then((function(){return t.deleteCardFromDOM()})).catch((function(t){return console.log(t)}))}var at=function(t,e){var n;t.target.classList.contains("place__like_active")?(n=e.cardId,$.dislikeCard(n)).then((function(e){t.target.classList.remove("place__like_active"),t.target.nextElementSibling.textContent=e.likes.length})).catch((function(t){return console.log(t)})):function(t){return $.likeCard(t)}(e.cardId).then((function(e){t.target.classList.add("place__like_active"),t.target.nextElementSibling.textContent=e.likes.length})).catch((function(t){return console.log(t)}))};function ut(t,e){e.textContent=t?"Сохранение…":"Сохранить"}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,